@mixin row($gap, $breakpoints) {
	margin-left: #{-$gap / 2};
	margin-right: #{-$gap / 2};

	& > * {
		margin-left: #{$gap / 2};
		margin-right: #{$gap / 2};
	}

	@include cols('col', $gap, $breakpoints);

	@each $breakpoint in map-keys($breakpoints) {
		@include lte($breakpoint) {
			@include cols('col-#{$breakpoint}', $gap, $breakpoints);
		}
	}

	&.wrap {
		flex-wrap: wrap;
		margin-top: #{-$gap / 2};
		margin-bottom: #{-$gap / 2};

		& > * {
			margin-top: #{$gap / 2};
			margin-bottom: #{$gap / 2};
		}
	}

	@each $breakpoint in map-keys($breakpoints) {
		@include lte($breakpoint) {
			&.wrap-#{$breakpoint} {
				flex-wrap: wrap;
				margin-top: #{-$gap / 2};
				margin-bottom: #{-$gap / 2};

				& > * {
					margin-top: #{$gap / 2};
					margin-bottom: #{$gap / 2};
				}
			}
		}
	}

	@each $breakpoint in map-keys($breakpoints) {
		@include lte($breakpoint) {
			&.scroll-#{$breakpoint} {
				width: auto;
				overflow: auto;
				flex-wrap: initial;

				& > * {
					flex: 0 0 calc(100% - #{$blockSpacing});
				}

				&::after {
					content: '';
					flex: 0 0 1px;
					margin-left: -1px;
				}
			}
		}
	}
}

@mixin _col($selector, $width, $gap) {
	.#{$selector} {
		flex: 0 0 calc(#{$width} - #{$gap});
	}
}

@mixin cols($prefix, $gap, $breakpoints) {
	@each $n in 2, 3, 4, 5, 6, 8, 10, 12 {
		@for $t from 1 to $n {
			@include _col('#{$prefix}-#{$t}-#{$n}', (($t/$n) * 100%), $gap);
		}
	}

	@for $n from 1 through 20 {
		$perc: ($n * 5);
		@include _col('#{$prefix}-#{$perc}', ($perc * 1%), $gap);
	}
}

@mixin grid($gap, $breakpoints) {
	.flex-row {
		display: flex;

		&.equals {
			& > * {
				flex: 1 1 0px;
			}
		}

		& > .col-fill {
			flex: 1 1 0px;
		}
	}

	.flex-row.small-gap {
		@include row($gap/2, $breakpoints);
	}

	.flex-row.no-gap {
		@include row(0px, $breakpoints);
	}

	.flex-row:not(.no-gap):not(.small-gap) {
		@include row($gap, $breakpoints);
	}
}
